#include <iostream>
#include <cstring>

// Vulnerability check: Demonstrate unsafe buffer handling
void unsafeFunction(char* input) {
    char buffer[10];

    // Check for buffer overflow condition
    if (strlen(input) >= sizeof(buffer)) {
        std::cout << "Potential Buffer Overflow Detected!" << std::endl;
        return;
    }

    // Unsafe function that can cause buffer overflow
    strcpy(buffer, input);  
    std::cout << "Buffer contents (unsafe): " << buffer << std::endl;
}

// Safer alternative function using strncpy
void safeFunction(char* input) {
    char buffer[10];

    // Using strncpy to prevent buffer overflow
    strncpy(buffer, input, sizeof(buffer) - 1);
    buffer[sizeof(buffer) - 1] = '\0';  // Ensuring null-termination
    std::cout << "Buffer contents (safe): " << buffer << std::endl;
}

int main() {
    char input[50];
    std::cout << "Enter a string: ";
    std::cin >> input;

    std::cout << "Running unsafe function..." << std::endl;
    unsafeFunction(input);

    std::cout << "Running safe function..." << std::endl;
    safeFunction(input);

    return 0;
}
